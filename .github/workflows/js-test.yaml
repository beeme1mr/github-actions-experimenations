on:
  repository_dispatch:
    types: [on_demand_test]

env:
  ITEMS_TO_DEPLOY: '["test", "test3"]'

jobs:
  check_run_test:
    runs-on: ubuntu-latest

    steps:
    - name: Dump On Demand Payload
      env:
        PAYLOAD: ${{ toJson(github.event.client_payload) }}
      run: |
        echo "$PAYLOAD"

    - name: JavaScript Magic
      uses: actions/github-script@v6
      id: filter
      with:
        script: |
          const filter = JSON.parse(process.env.ITEMS_TO_DEPLOY);
          console.log(filter);
          // Grab from incoming payload
          const items = context.payload.client_payload.items;
          console.log(items);
          itemsToDeploy = items.filter(i => filter.includes(i));
          return {
            shouldDeploy: itemsToDeploy.length > 0,
            itemsToDeploy,
          };
          
    - name: Get result
      run: echo "${{steps.filter.outputs.result}}"
    outputs:
      should_deploy: ${{ fromJSON(steps.filter.outputs.result).shouldDeploy }}
      items_to_deploy: ${{ fromJSON(steps.filter.outputs.result).itemsToDeploy }}

  release:
    needs: check_run_test
    runs-on: ubuntu-latest
    if: ${{ needs.check_run_test.outputs.should_deploy }}
    strategy:
      matrix: 
        path: ${{ fromJSON(needs.check_run_test.outputs.items_to_deploy) }}
    steps:
      - name: Get result
        run: echo "I should deploy!"
    
